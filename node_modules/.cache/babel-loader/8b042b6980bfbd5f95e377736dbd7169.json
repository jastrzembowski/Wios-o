{"ast":null,"code":"var _jsxFileName = \"/home/kamil/Desktop/Aplikacja/src/Maps/Map.js\";\nimport React from \"react\";\nimport { GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport markerIcon from \"../img/location2.png\";\nimport RezervationForm from \"../Forms/RezervationForm\";\nconst DATABASE_URL = 'https://dancing-app-77d2a.firebaseio.com';\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedPlace: null,\n      offersList: []\n    };\n\n    this.fetchOffers = () => {\n      fetch(`${DATABASE_URL}/offers.json`).then(r => r.json()).then(data => {\n        if (!data) {\n          this.setState({\n            offersList: []\n          });\n        } else {\n          const formattedData = Object.keys(data).map(key => {\n            return {\n              id: key,\n              ...data[key]\n            };\n          });\n          console.log(formattedData);\n          this.setState({\n            offersList: formattedData\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchOffers();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultZoom: 6.8,\n      defaultCenter: {\n        lat: 51.919437,\n        lng: 19.145136\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, this.state.offersList.map(place => /*#__PURE__*/React.createElement(Marker, {\n      key: place.id,\n      position: {\n        lat: place.location.lat,\n        lng: place.location.lng\n      },\n      onClick: () => {\n        this.setState({\n          selectedPlace: place\n        });\n      },\n      icon: {\n        url: markerIcon,\n        scaledSize: new window.google.maps.Size(47, 45)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })), this.state.selectedPlace && /*#__PURE__*/React.createElement(InfoWindow, {\n      onCloseClick: () => {\n        this.setState({\n          selectedPlace: null\n        });\n      },\n      position: {\n        lat: Number(this.state.selectedPlace.location.lat),\n        lng: Number(this.state.selectedPlace.location.lng)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Kajak\"), /*#__PURE__*/React.createElement(RezervationForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/kamil/Desktop/Aplikacja/src/Maps/Map.js"],"names":["React","GoogleMap","Marker","InfoWindow","markerIcon","RezervationForm","DATABASE_URL","Map","Component","state","selectedPlace","offersList","fetchOffers","fetch","then","r","json","data","setState","formattedData","Object","keys","map","key","id","console","log","componentDidMount","render","lat","lng","place","location","url","scaledSize","window","google","maps","Size","Number"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport markerIcon from \"../img/location2.png\";\nimport RezervationForm from \"../Forms/RezervationForm\";\n\nconst DATABASE_URL = 'https://dancing-app-77d2a.firebaseio.com'\n\nclass Map extends React.Component {\n\n  state ={\n    selectedPlace: null,\n    offersList: []\n  }\n\n  fetchOffers = () => {\n    fetch(`${DATABASE_URL}/offers.json`)\n    .then(r => r.json())\n    .then(data => {\n      if (!data) {\n        this.setState({\n          offersList: []\n        })\n      } else {\n        const formattedData = Object.keys(data)\n        .map(key => {\n          return {\n            id: key,\n            ...data[key]\n          }\n        })\n        console.log(formattedData);\n        this.setState({\n          offersList: formattedData\n        })\n      }\n    })\n  }\n\n  componentDidMount() {\n    this.fetchOffers()\n  }\n\n  \n  render(){\n    return (\n      <GoogleMap\n        defaultZoom={6.8}\n        defaultCenter={{ lat: 51.919437, lng: 19.145136 }}\n      >\n        {this.state.offersList.map(place => (\n          <Marker\n            key={place.id}\n            position={{\n              lat: place.location.lat,\n              lng: place.location.lng \n            }}\n            onClick={() => {\n              this.setState({\n                selectedPlace: place\n              })\n            }}\n            icon={{\n              url: markerIcon,\n              scaledSize: new window.google.maps.Size(47, 45)\n            }}\n          />\n        ))}\n  \n        {this.state.selectedPlace && (\n          <InfoWindow\n            onCloseClick={() => {\n              this.setState({\n                selectedPlace: null\n              })\n            }}\n            position={{\n              lat: Number(this.state.selectedPlace.location.lat),\n              lng: Number(this.state.selectedPlace.location.lng)\n            }}\n          >\n            <div>\n              <h4>Kajak</h4>\n              <RezervationForm/>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    );\n\n  }  \n    \n}\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}