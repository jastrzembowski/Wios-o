{"ast":null,"code":"var _jsxFileName = \"/home/kamil/Desktop/Aplikacja/src/Offers/OfferCards.js\";\nimport React from \"react\";\nimport OfferCard from \"./OfferCard\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { faSortAlphaDown, faSortAlphaUp, faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport RangeSlider from \"./DifficultySliderbar\";\nimport \"./offers.css\";\nconst DATABASE_URL = \"https://wioslo-default-rtdb.firebaseio.com/\";\nexport default class Cards extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      offers: [],\n      sorter: undefined,\n      sortDirection: \"\",\n      name: \"\",\n      level: [\"łatwy\", \"średni\", \"trudny\"],\n      levelSortDirection: \"\"\n    };\n\n    this.handleChange = (event, newValue) => {\n      let newValueStringify = JSON.stringify(newValue);\n\n      if (newValueStringify === JSON.stringify([1, 5])) {\n        this.setState({\n          level: [\"łatwy\", \"średni\", \"trudny\"]\n        });\n      }\n\n      if (newValueStringify === JSON.stringify([3, 5])) {\n        this.setState({\n          level: [\"średni\", \"trudny\"]\n        });\n      }\n\n      if (newValueStringify === JSON.stringify([5, 5])) {\n        this.setState({\n          level: [\"trudny\"]\n        });\n      }\n\n      if (newValueStringify === JSON.stringify([1, 3])) {\n        this.setState({\n          level: [\"łatwy\", \"średni\"]\n        });\n      }\n\n      if (newValueStringify === JSON.stringify([3, 3])) {\n        this.setState({\n          level: [\"średni\"]\n        });\n      }\n\n      if (newValueStringify === JSON.stringify([1, 1])) {\n        this.setState({\n          level: [\"łatwy\"]\n        });\n      }\n    };\n\n    this.sortByName = () => {\n      if (this.state.sortDirection === \"alphabetically\") {\n        this.setState(() => ({\n          sorter: (a, b) => b.title.localeCompare(a.title),\n          sortDirection: \"revesedAlphabetically\"\n        }));\n      } else {\n        this.setState(() => ({\n          sorter: (a, b) => a.title.localeCompare(b.title),\n          sortDirection: \"alphabetically\"\n        }));\n      }\n    };\n\n    this.sortByLevel = () => {\n      if (this.state.levelSortDirection === \"fromLowToHigh\") {\n        this.setState(() => ({\n          sorter: (a, b) => b.level.localeCompare(a.level),\n          levelSortDirection: \"fromHighToLow\"\n        }));\n      } else {\n        this.setState(() => ({\n          sorter: (a, b) => a.level.localeCompare(b.level),\n          levelSortDirection: \"fromLowToHigh\"\n        }));\n      }\n    };\n\n    this.handleNameChange = name => {\n      this.setState({\n        name: name.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${DATABASE_URL}/offers.json`).then(response => response.json()).then(data => {\n      const formattedData = Object.keys(data).map(key => ({\n        id: key,\n        ...data[key]\n      }));\n      this.setState({\n        offers: formattedData\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background-coloring-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"offers-navigation-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      label: \"Filtruj po nazwie\",\n      value: this.state.name,\n      onChange: name => {\n        this.handleNameChange(name);\n      },\n      InputLabelProps: {\n        style: {\n          color: \"white\"\n        }\n      },\n      InputProps: {\n        style: {\n          color: \"white\"\n        }\n      },\n      variant: \"filled\",\n      style: {\n        gridArea: \"filterInput\",\n        backgroundColor: \"#151818\",\n        color: \"white\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(RangeSlider, {\n      handleChange: this.handleChange,\n      style: {\n        gridArea: \"slider\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary.light\",\n      style: {\n        gridArea: \"sortByName\",\n        backgroundColor: \"#151818\",\n        color: \"white\",\n        textTransform: \"none\"\n      },\n      onClick: this.sortByName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, this.state.sortDirection === \"alphabetically\" ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSortAlphaDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSortAlphaUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }), \"Sortuj wed\\u0142ug nazwy\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      style: {\n        backgroundColor: \"#151818\",\n        color: \"white\",\n        gridArea: \"sortByLevel\"\n      },\n      onClick: this.sortByLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, this.state.levelSortDirection === \"fromLowToHigh\" ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSortAmountDownAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSortAmountUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }), \"Sortuj wed\\u0142ug trudno\\u015Bci\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"offers-dashboard\",\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, this.state.offers.sort(this.state.sorter).filter(offer => offer.title.includes(this.state.name)).filter(offer => {\n      if (this.state.level.includes(offer.level)) {\n        return offer;\n      }\n    }).map(offer => /*#__PURE__*/React.createElement(OfferCard, {\n      offer: offer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/kamil/Desktop/Aplikacja/src/Offers/OfferCards.js"],"names":["React","OfferCard","TextField","Button","faSortAlphaDown","faSortAlphaUp","faSortAmountDownAlt","faSortAmountUp","FontAwesomeIcon","RangeSlider","DATABASE_URL","Cards","Component","state","offers","sorter","undefined","sortDirection","name","level","levelSortDirection","handleChange","event","newValue","newValueStringify","JSON","stringify","setState","sortByName","a","b","title","localeCompare","sortByLevel","handleNameChange","target","value","componentDidMount","fetch","then","response","json","data","formattedData","Object","keys","map","key","id","render","style","color","gridArea","backgroundColor","textTransform","sort","filter","offer","includes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport OfferCard from \"./OfferCard\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  faSortAlphaDown,\n  faSortAlphaUp,\n  faSortAmountDownAlt,\n  faSortAmountUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport RangeSlider from \"./DifficultySliderbar\";\nimport \"./offers.css\";\nconst DATABASE_URL = \"https://wioslo-default-rtdb.firebaseio.com/\";\n\nexport default class Cards extends React.Component {\n  state = {\n    offers: [],\n    sorter: undefined,\n    sortDirection: \"\",\n    name: \"\",\n    level: [\"łatwy\", \"średni\", \"trudny\"],\n    levelSortDirection: \"\",\n  };\n  \n\n  componentDidMount() {\n    fetch(`${DATABASE_URL}/offers.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        const formattedData = Object.keys(data).map((key) => ({\n          id: key,\n          ...data[key],\n        }));\n        this.setState({\n          offers: formattedData,\n        });\n      });\n  }\n\n  handleChange = (event, newValue) => {\n    let newValueStringify = JSON.stringify(newValue);\n    if (newValueStringify === JSON.stringify([1, 5])) {\n      this.setState({\n        level: [\"łatwy\", \"średni\", \"trudny\"],\n      });\n    }\n    if (newValueStringify === JSON.stringify([3, 5])) {\n      this.setState({\n        level: [\"średni\", \"trudny\"],\n      });\n    }\n    if (newValueStringify === JSON.stringify([5, 5])) {\n      this.setState({\n        level: [\"trudny\"],\n      });\n    }\n    if (newValueStringify === JSON.stringify([1, 3])) {\n      this.setState({\n        level: [\"łatwy\", \"średni\"],\n      });\n    }\n    if (newValueStringify === JSON.stringify([3, 3])) {\n      this.setState({\n        level: [\"średni\"],\n      });\n    }\n    if (newValueStringify === JSON.stringify([1, 1])) {\n      this.setState({\n        level: [\"łatwy\"],\n      });\n    }\n  };\n\n  sortByName = () => {\n    if (this.state.sortDirection === \"alphabetically\") {\n      this.setState(() => ({\n        sorter: (a, b) => b.title.localeCompare(a.title),\n        sortDirection: \"revesedAlphabetically\",\n      }));\n    } else {\n      this.setState(() => ({\n        sorter: (a, b) => a.title.localeCompare(b.title),\n        sortDirection: \"alphabetically\",\n      }));\n    }\n  };\n\n  sortByLevel = () => {\n    if (this.state.levelSortDirection === \"fromLowToHigh\") {\n      this.setState(() => ({\n        sorter: (a, b) => b.level.localeCompare(a.level),\n        levelSortDirection: \"fromHighToLow\",\n      }));\n    } else {\n      this.setState(() => ({\n        sorter: (a, b) => a.level.localeCompare(b.level),\n        levelSortDirection: \"fromLowToHigh\",\n      }));\n    }\n  };\n\n  handleNameChange = (name) => {\n    this.setState({\n      name: name.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"background-coloring-div\">\n          <div className=\"offers-navigation-bar\">\n            <TextField\n              label=\"Filtruj po nazwie\"\n              value={this.state.name}\n              onChange={(name) => {\n                this.handleNameChange(name);\n              }}\n              InputLabelProps={{\n                style: { color: \"white\" }, \n             }}\n             InputProps={{\n               style: { color: \"white\"}\n             }}\n              variant=\"filled\"\n              style={{\n                gridArea: \"filterInput\",\n                backgroundColor: \"#151818\",\n                color: \"white\",\n              }}\n            />\n            <RangeSlider\n              handleChange={this.handleChange}\n              style={{\n                gridArea: \"slider\",\n              }}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"secondary.light\"\n              style={{\n                gridArea: \"sortByName\",\n                backgroundColor: \"#151818\",\n                color: \"white\",\n                textTransform: \"none\"\n              }}\n              onClick={this.sortByName}\n            >\n              {this.state.sortDirection === \"alphabetically\" ? (\n                <FontAwesomeIcon icon={faSortAlphaDown} />\n              ) : (\n                <FontAwesomeIcon icon={faSortAlphaUp} />\n              )}\n               Sortuj według nazwy\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              style={{\n                backgroundColor: \"#151818\",\n                color: \"white\",\n                gridArea: \"sortByLevel\",\n              }}\n              onClick={this.sortByLevel}\n            >\n              {this.state.levelSortDirection === \"fromLowToHigh\" ? (\n                <FontAwesomeIcon icon={faSortAmountDownAlt} />\n              ) : (\n                <FontAwesomeIcon icon={faSortAmountUp} />\n              )}\n              Sortuj według trudności\n            </Button>\n          </div>\n        </div>\n        <div className=\"offers-dashboard\" style={{}}>\n          {this.state.offers\n            .sort(this.state.sorter)\n            .filter((offer) => offer.title.includes(this.state.name))\n            .filter((offer) => {\n              if (this.state.level.includes(offer.level)) {\n                return offer;\n              }\n            })\n            .map((offer) => (\n              <OfferCard offer={offer} />\n            ))}\n        </div>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}