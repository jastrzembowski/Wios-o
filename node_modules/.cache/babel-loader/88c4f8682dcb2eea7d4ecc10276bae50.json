{"ast":null,"code":"var _jsxFileName = \"/home/kamil/Desktop/Aplikacja/src/LoginRegister/SignupHome.js\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { navStyles } from \"../Navigacja/nav-styles\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nexport default function Signup() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n  const classes = navStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setMessage(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      handleClose();\n      setMessage(\"Pomyślnie założono konto!\");\n      history.push(\"/kayak\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClickOpen,\n    style: {\n      width: \"250px\",\n      height: \"70px\",\n      border: \"solid\",\n      borderColor: \"white\",\n      backgroundColor: \"white\",\n      color: \"none\",\n      fontSize: \"25px\",\n      padding: \"2px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Rejestracja\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      minWidth: \"550px\",\n      minHeight: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: \"black\"\n    },\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"REJESTRACJA\", \" \"), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(Form, {\n    style: {\n      color: \"black\"\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    required: true,\n    ref: emailRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Has\\u0142o\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    required: true,\n    ref: passwordRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password-confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Potwierd\\u017A has\\u0142o\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    required: true,\n    ref: passwordConfirmRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    disabled: loading,\n    variant: \"contained\",\n    size: \"large\",\n    style: {\n      backgroundColor: \"rgb(0,0,0)\",\n      color: \"white\"\n    },\n    className: \"w-100\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"Zarejestruj si\\u0119\", \" \"))))));\n}","map":{"version":3,"sources":["/home/kamil/Desktop/Aplikacja/src/LoginRegister/SignupHome.js"],"names":["Dialog","React","useRef","useState","Form","Card","Alert","useAuth","Button","useHistory","navStyles","PersonAddIcon","ListItem","ListItemIcon","ListItemText","Signup","emailRef","passwordRef","passwordConfirmRef","signup","error","setError","message","setMessage","loading","setLoading","open","setOpen","history","classes","handleClickOpen","handleClose","handleSubmit","e","preventDefault","current","value","push","width","height","border","borderColor","backgroundColor","color","fontSize","padding","minWidth","minHeight"],"mappings":"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","sourcesContent":["import Dialog from \"@material-ui/core/Dialog\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport { navStyles } from \"../Navigacja/nav-styles\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nexport default function Signup() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n  const classes = navStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n    try {\n      setError(\"\");\n      setMessage(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      handleClose();\n      setMessage(\"Pomyślnie założono konto!\");\n      history.push(\"/kayak\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n    setLoading(false);\n  }\n  return (\n    <>\n          <Button \n    onClick={handleClickOpen}\n    style={{\n        width: \"250px\",\n        height: \"70px\",\n        border: \"solid\",\n        borderColor: \"white\",\n        backgroundColor: \"white\",\n        color: \"none\",\n        fontSize: \"25px\",\n        padding: \"2px\"\n    }}\n>Rejestracja</Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <Card style={{ minWidth: \"550px\", minHeight: \"400px\" }}>\n          <Card.Body>\n            <h2 style={{ color: \"black\" }} className=\"text-center mb-4\">\n              REJESTRACJA{\" \"}\n            </h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            <Form style={{ color: \"black\" }} onSubmit={handleSubmit}>\n              <Form.Group id=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" required ref={emailRef} />\n              </Form.Group>\n              <Form.Group id=\"password\">\n                <Form.Label>Hasło</Form.Label>\n                <Form.Control type=\"password\" required ref={passwordRef} />\n              </Form.Group>\n              <Form.Group id=\"password-confirm\">\n                <Form.Label>Potwierdź hasło</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  required\n                  ref={passwordConfirmRef}\n                />\n              </Form.Group>\n              <Button\n                disabled={loading}\n                variant=\"contained\"\n                size=\"large\"\n                style={{ backgroundColor: \"rgb(0,0,0)\", color: \"white\" }}\n                className=\"w-100\"\n                type=\"submit\"\n              >\n                Zarejestruj się{\" \"}\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Dialog>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}