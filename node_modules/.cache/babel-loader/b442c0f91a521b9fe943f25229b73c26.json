{"ast":null,"code":"var _jsxFileName = \"/home/kamil/Desktop/Aplikacja/src/LoginRegister/Signup.js\";\nimport Dialog from '@material-ui/core/Dialog';\nimport React, { useRef, useState } from 'react';\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\nimport { useAuth } from '../contexts/AuthContext';\nexport default function Signup() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const classes = navStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match');\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      setError('Failed to create an account');\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    className: classes.newButton,\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: \"black\"\n    },\n    className: \"text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, \"Sign Up\"), error && /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, error), /*#__PURE__*/React.createElement(Form, {\n    style: {\n      color: \"black\"\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 27\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    required: true,\n    ref: emailRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    required: true,\n    ref: passwordRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password-confirm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 27\n    }\n  }, \"Password Confirmation\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    required: true,\n    ref: passwordConfirmRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    disabled: loading,\n    className: \"w-100\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Sign up\"))))));\n}","map":{"version":3,"sources":["/home/kamil/Desktop/Aplikacja/src/LoginRegister/Signup.js"],"names":["Dialog","React","useRef","useState","Form","Button","Card","Alert","useAuth","Signup","emailRef","passwordRef","passwordConfirmRef","signup","error","setError","loading","setLoading","open","setOpen","classes","navStyles","handleClickOpen","handleClose","handleSubmit","e","preventDefault","current","value","newButton","color"],"mappings":"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","sourcesContent":["import Dialog from '@material-ui/core/Dialog';\nimport React, {useRef, useState} from 'react'\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\nimport {useAuth} from '../contexts/AuthContext'\n\nexport default function Signup() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const {signup} = useAuth()\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [open, setOpen] = React.useState(false);\n    const classes = navStyles();\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n        if (passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError('Passwords do not match')\n        }\n        try{\n            setError('')\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value)\n        } catch {\n            setError('Failed to create an account')\n        }\n        setLoading(false)\n    }\n    return (\n    <>\n       <Button color=\"secondary\"\n              variant=\"contained\"\n              className={classes.newButton}\n               onClick={handleClickOpen}>\n        Sign up\n      </Button>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <Card>\n              <Card.Body>\n                  <h2 style={{color:\"black\"}} className=\"text-center mb-4\">Sign Up</h2>\n                  {error && <Alert variant=\"danger\">{error}</Alert>}\n                  <Form style={{ color: \"black\"}} onSubmit={handleSubmit}>\n                      <Form.Group id=\"email\">\n                          <Form.Label>Email</Form.Label>\n                          <Form.Control type=\"email\" required ref={emailRef} />\n                      </Form.Group>\n                      <Form.Group id=\"password\">\n                          <Form.Label>Password</Form.Label>\n                          <Form.Control type=\"password\" required ref={passwordRef} />\n                      </Form.Group>\n                      <Form.Group id=\"password-confirm\">\n                          <Form.Label>Password Confirmation</Form.Label>\n                          <Form.Control type=\"password\" required ref={passwordConfirmRef} />\n                      </Form.Group>\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign up</Button>\n                  </Form>\n              </Card.Body>\n              </Card>  \n        </Dialog>\n         </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}