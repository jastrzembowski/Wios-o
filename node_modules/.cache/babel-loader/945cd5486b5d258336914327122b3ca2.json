{"ast":null,"code":"var _jsxFileName = \"/home/kamil/Desktop/Aplikacja/src/LoginRegister/Profile/Profile.js\";\nimport React, { useRef, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { Form, Card, Alert } from \"react-bootstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { navStyles } from \"../../Navigacja/nav-styles\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nexport default function Profile() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const classes = navStyles();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const {\n    currentUser,\n    updatePassword,\n    updateEmail\n  } = useAuth();\n  const [state, setState] = React.useState({\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  var name = currentUser.email.substring(0, currentUser.email.indexOf(\"@\"));\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises).then(() => {\n      setMessage(\"PomyÅ›lnie zaaktualizowano konto!\");\n    }).catch(() => {\n      setError(\"Problem z zaaktualizowaniem konta\");\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    key: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: toggleDrawer(\"right\", true),\n    className: classes.menuTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classes.menuTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AccountBoxIcon, {\n    className: classes.menuTextStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Profil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Drawer, {\n    className: clsx(classes.drawerProfile, {\n      [classes.drawerOpenPerson]: \"right\",\n      [classes.drawerClose]: !\"right\"\n    }),\n    classes: {\n      paper: clsx({\n        [classes.drawerOpenPerson]: \"right\",\n        [classes.drawerClose]: !\"right\"\n      })\n    },\n    anchor: \"right\",\n    open: state[\"right\"],\n    onClose: toggleDrawer(\"right\", false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      flexFlow: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      fontSize: \"90px\",\n      marginTop: \"23%\",\n      fontFamily: \"Anton\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Witaj \", name, \" !\"), /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      fontSize: \"50px\",\n      marginTop: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Edytuj profil\")), /*#__PURE__*/React.createElement(Form, {\n    style: {\n      color: \"black\"\n    },\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"email\",\n    style: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    style: {\n      fontSize: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Nowy email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    style: {\n      padding: \"25px\"\n    },\n    ref: emailRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password\",\n    style: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    style: {\n      fontSize: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Nowe has\\u0142o\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    style: {\n      padding: \"25px\"\n    },\n    ref: passwordRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"password-confirm\",\n    style: {\n      display: \"flex\",\n      flexFlow: \"column\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    style: {\n      fontSize: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, \"Potwierd\\u017A has\\u0142o\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    style: {\n      padding: \"25px\"\n    },\n    ref: passwordConfirmRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    disabled: loading,\n    variant: \"contained\",\n    size: \"large\",\n    style: {\n      backgroundColor: \"#151818\",\n      color: \"white\",\n      padding: \"18px\",\n      fontSize: \"25px\"\n    },\n    className: \"w-100\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"Zapisz zmiany\"))))));\n}","map":{"version":3,"sources":["/home/kamil/Desktop/Aplikacja/src/LoginRegister/Profile/Profile.js"],"names":["React","useRef","useState","clsx","makeStyles","Drawer","Form","Card","Alert","Button","List","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","navStyles","AccountBoxIcon","useAuth","Profile","emailRef","passwordRef","passwordConfirmRef","classes","error","setError","message","setMessage","loading","setLoading","currentUser","updatePassword","updateEmail","state","setState","right","toggleDrawer","anchor","open","event","type","key","name","email","substring","indexOf","handleSubmit","e","preventDefault","current","value","promises","push","Promise","all","then","catch","finally","menuTextStyle","drawerProfile","drawerOpenPerson","drawerClose","paper","width","height","display","alignItems","flexFlow","fontSize","marginTop","fontFamily","color","padding","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { Form, Card, Alert } from \"react-bootstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport { navStyles } from \"../../Navigacja/nav-styles\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nexport default function Profile() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const classes = navStyles();\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { currentUser, updatePassword, updateEmail } = useAuth();\n  const [state, setState] = React.useState({ right: false });\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n  var name = currentUser.email.substring(0, currentUser.email.indexOf(\"@\"));\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        setMessage(\"PomyÅ›lnie zaaktualizowano konto!\");\n      })\n      .catch(() => {\n        setError(\"Problem z zaaktualizowaniem konta\");\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n  return (\n    <div>\n      <React.Fragment key={\"right\"}>\n        <ListItem\n          button\n          onClick={toggleDrawer(\"right\", true)}\n          className={classes.menuTextStyle}\n        >\n          <ListItemIcon className={classes.menuTextStyle}>\n            <AccountBoxIcon className={classes.menuTextStyle} />\n          </ListItemIcon>\n          <ListItemText primary={\"Profil\"} />\n        </ListItem>\n\n        <Drawer\n          className={clsx(classes.drawerProfile, {\n            [classes.drawerOpenPerson]: \"right\",\n            [classes.drawerClose]: !\"right\",\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpenPerson]: \"right\",\n              [classes.drawerClose]: !\"right\",\n            }),\n          }}\n          anchor={\"right\"}\n          open={state[\"right\"]}\n          onClose={toggleDrawer(\"right\", false)}\n        >\n          <div\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              flexFlow: \"column\",\n            }}\n          >\n            <h1\n              style={{\n                fontSize: \"90px\",\n                marginTop: \"23%\",\n                fontFamily: \"Anton\",\n              }}\n            >\n              Witaj {name} !\n            </h1>\n            <h1 style={{ fontSize: \"50px\", marginTop: \"40px\" }}>\n              <b>Edytuj profil</b>\n            </h1>\n            <Form style={{ color: \"black\" }} onSubmit={handleSubmit}>\n              <Form.Group\n                id=\"email\"\n                style={{\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Form.Label style={{ fontSize: \"30px\" }}>Nowy email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  style={{ padding: \"25px\" }}\n                  ref={emailRef}\n                />\n              </Form.Group>\n              <Form.Group\n                id=\"password\"\n                style={{\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Form.Label style={{ fontSize: \"30px\" }}>Nowe hasÅ‚o</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  style={{ padding: \"25px\" }}\n                  ref={passwordRef}\n                />\n              </Form.Group>\n              <Form.Group\n                id=\"password-confirm\"\n                style={{\n                  display: \"flex\",\n                  flexFlow: \"column\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Form.Label style={{ fontSize: \"30px\" }}>\n                  PotwierdÅº hasÅ‚o\n                </Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  style={{ padding: \"25px\" }}\n                  ref={passwordConfirmRef}\n                />\n              </Form.Group>\n              <Button\n                disabled={loading}\n                variant=\"contained\"\n                size=\"large\"\n                style={{ backgroundColor: \"#151818\", color: \"white\", padding: \"18px\", fontSize: \"25px\" }}\n                className=\"w-100\"\n                type=\"submit\"\n                \n              >\n                Zapisz zmiany\n              </Button>\n            </Form>\n          </div>\n        </Drawer>\n      </React.Fragment>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}